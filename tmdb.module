<?php

/**
 * @file tmdb.module
 * Contains required installation hooks.
 *
 * @todo
 * - Implement hook_help().
 */

/**
 * Implements hook_perm().
 */
function tmdb_perm() {
  return array('Administer TMDb configuration');
}

/**
 * Implements hook_menu().
 */
function tmdb_menu() {
  $items = array();

  // Configuration page:
  $items['admin/settings/tmdb'] =
  $items['admin/settings/tmdb/api'] = array(
    'title'            => 'TMDb Settings',
    'description'      => 'Configuration settings for themoviedb.org API.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('tmdb_admin_api_settings'),
    'access arguments' => array('administer TMDb configuration'),
    'type'             => MENU_CALLBCAK,
    'file'             => 'tmdb.admin.inc',
    'weight'           => 1,
  );
  $items['admin/settings/tmdb/api']['type'] = MENU_DEFAULT_LOCAL_TASK;
  // API test page:
  $items['admin/settings/tmdb/test'] = array(
    'title'            => 'API Test',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('tmdb_admin_api_testing'),
    'access arguments' => array('administer TMDb configuration'),
    'type'             => MENU_LOCAL_TASK,
    'file'             => 'tmdb.admin.inc',
    'weight'           => 2,
  );

  return $items;
}

/**
 * Main Wrapper function for instantiating a TMDbAPI object.
 *
 * @param $key
 *   Optional TMDb API Key.
 * @param $server
 *   Optional TMDb API Server.
 * @param $version
 *   Optional TMDb API Version.
 * @param $format
 *   Optional TMDb API Response Format.
 * @param $language
 *   Optional TMDb API Response Language.
 *
 * @return
 *   TMDbAPI object or FALSE on failure.
 */
function tmdb($key = FALSE, $server = FALSE, $version = FALSE, $format = FALSE, $language = FALSE) {
  // Check for API key availablity:
  if (!$key && !variable_get('tmdb_api_key', FALSE)) {
    return FALSE;
  }

  $key      = $key ? $key : variable_get('tmdb_api_key', '');
  $format   = $format ? $format : variable_get('tmdb_api_format', 'json');
  $server   = $server ? $server : variable_get('tmdb_api_server', 'http://api.themoviedb.org/');
  $version  = $version ? $version : variable_get('tmdb_api_version', '2.1');
  $language = $language ? $language: variable_get('tmdb_api_language', 'en');

  // Load TMDbPHP library:
  module_load_include('api.inc', 'tmdb', 'tmdb');
  // Instantiate and return the object:
  return new TMDbAPI($key, $server, $version, $format, $language);
}
